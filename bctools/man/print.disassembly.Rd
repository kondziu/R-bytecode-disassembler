% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bctools.R
\name{print.disassembly}
\alias{print.disassembly}
\title{Print bytecode object to output and returns it \emph{invisibly} (via \code{\link{invisible}(x)})}
\usage{
\method{print}{disassembly}(x, prefix = "", verbose = NULL, maxdepth = 2,
  depth = 0, ...)
}
\arguments{
\item{x}{Bytecode object to be printed}

\item{prefix}{number of spaces to print before each line ( used for intendation )}

\item{verbose}{verbosity level ( 0 or 1 or 2)
0 - display only source references ( if they are available, if they aren't print expression references instead )
1 - the same as 0 + display bytecode version and display expression references ( if they are available )
2 - the same as 1 + display every operand's argument ( including ones used just for debugging )
default value can be pre-set by \emph{bcverbose} function}

\item{maxdepth}{Maximum depth of nested functions which are printed}

\item{depth}{Current depth of nested functions which are being printed ( used for internal purposes in print recursion )}

\item{...}{Numeric, complex, or logical vectors.}
}
\description{
\code{print.disassembly} print bytecode object into output in human-friendly way.
}
\details{
This is implementation of print method for bytecode object. 
It works under internal R Bytecode structure.
You can manually create bytecode object through \emph{compiler} package ( via for example \code{\link{cmpfun}} function )
}
\examples{
library(compiler)
library(bctools)
a <- function(x){
  r <- 1
  while(x){
    r = r + x*x
    x = x-1
  }
  r
}
bc <- compiler::cmpfun(a)

#these two does the same
disassemble(bc);
print(disassemble(bc));

#manually set verbose level
print(disassemble(bc), verbose=1);
print(disassemble(bc), verbose=2);

}
